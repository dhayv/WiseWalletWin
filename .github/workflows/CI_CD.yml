name: CI/CD Pipeline

on:
  workflow_dispatch:  
  push:
    branches:
      - main
    paths: 
      - './Backend/**'
      - './Frontend/**'

jobs:
  dockerize-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: List directory contents
        run: ls -R

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.4.1
        with:
          context: ./Backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/wisewallet-backend:latest

  deploy:
    needs: dockerize-backend
    runs-on: aws-ec2  # Ensure this custom runner is correctly configured
    steps:
      - name: Pull image from Docker Hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/wisewallet-backend:latest

      - name: Delete old Container
        run: docker rm -f ${{ secrets.DOCKER_USERNAME }}/wisewallet-backend:latest

      - name: Run docker container
        run: sudo systemctl restart backend.service

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: List directory contents
        run: ls -R

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20.12.1

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd ./Frontend
          npm install

      - name: Build the frontend
        env:
          VITE_APP_API_URL: ${{ secrets.VITE_APP_API_URL }}
        run: |
          cd ./Frontend
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync ./frontend/dist/ s3://${{ secrets.AWS_S3_BUCKET }} --region ${{ secrets.AWS_REGION }} --delete
